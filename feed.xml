<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>shigeki.takeguchi.log</title>
  <subtitle>食べること、地方都市、アプリ作るための技術などつらつらと書いていきます</subtitle>
  <id>https://shigekitakeguchi.com</id>
  <link href="https://shigekitakeguchi.com"/>
  <link href="https://shigekitakeguchi.com/feed.xml" rel="self"/>
  <updated>2016-05-27T00:00:00Z</updated>
  <author>
    <name>shigeki.takeguchi</name>
  </author>
  <entry>
    <title>npmとwebpackで作るいい感じのthree.js開発環境 2016年5月の場合。</title>
    <link rel="alternate" href="https://shigekitakeguchi.com/2016/05/27/1.html"/>
    <id>https://shigekitakeguchi.com/2016/05/27/1.html</id>
    <published>2016-05-27T00:00:00Z</published>
    <updated>2016-05-27T23:11:43+09:00</updated>
    <author>
      <name>shigeki.takeguchi</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a data-flickr-embed="true"  href="https://www.flickr.com/photos/shigeki_takeguchi/26675269163/in/dateposted-public/" title="npm_webpack_threejs_sass"&gt;&lt;img src="https://c4.staticflickr.com/8/7578/26675269163_408de6b9af_z.jpg" width="640" height="480" alt="npm_webpack_threejs_sass" class="image-border"&gt;&lt;/a&gt;&lt;script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/shigekitakeguchi/npm-webpack-sass"&gt;npmとwebpackで作るいい感じのフロントエンド開発環境（React.js使わない）2016年5月の場合。&lt;/a&gt;&lt;br&gt;
これをベースにしてthree.jsの開発環境。&lt;br&gt;
以前はGruntやGulpやらで用意してたけどnpm+webpackへ移行。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://threejs.org/"&gt;three.js - Javascript 3D library&lt;/a&gt;&lt;br&gt;
WebGLをあつかう時にWebGLままで記述するのはちょっとツライので何かしらのフレームワークを利用すると思うけど（Unityでも作れるらしい）その中でもthree.jsが今のところメジャー。なので情報も多いし事例も多い。&lt;br&gt;
開発するってことになるとCDNから圧縮されたthree.min.jsを読み込むのもいいんだけどwebpackでrequireしてみました。&lt;/p&gt;

&lt;h2&gt;必要なものあるかどうか確認&lt;/h2&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;まずはお決まりのNode.js入ってるか確認。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;npm（Node.jsのパッケージマネージャー）も入ってるか確認。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;webpack -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;webpackも入っているか確認。&lt;br&gt;
もし入ってなかったら&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install -g webpack
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;-gオプションはGlobalオプションのこと。&lt;/p&gt;

&lt;h2&gt;ファイル・フォルダ構成&lt;/h2&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/shigekitakeguchi/npm-webpack-threejs-sass.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://github.com/shigekitakeguchi/npm-webpack-threejs-sass"&gt;https://github.com/shigekitakeguchi/npm-webpack-threejs-sass&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHubから落として使ってください。&lt;br&gt;
カスタマイズなりなんなりして。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd npm-webpack-sass
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;落としたフォルダ内に移動する。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;├── README.md
├── app
│   ├── index.html
│   ├── scripts
│   └── styles
├── bs-config.json
├── package.json
├── src
│   ├── scripts
│   │   └── app.js
│   └── scss
│       ├── _normalize.css
│       └── style.scss
└── webpack.config.js
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ファイル・フォルダ構成はこんな感じ。README.mdは不要。&lt;br&gt;
/src/scss/にnormalize.cssを含めた。resetがお好きならresetを。このあたりは好みで。&lt;br&gt;
/app/index.htmlを含めてる。内容は適宜変更ください。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで必要なパッケージがインストールされるはず。&lt;/p&gt;

&lt;h2&gt;package.json&lt;/h2&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"npm-webpack-threejs-sass"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"index.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"three"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.76.1"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"concurrently"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.1.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"lite-server"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.2.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"node-sass"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^3.7.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"nodemon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.9.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"webpack"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.13.0"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"webpack"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"webpack -w"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"lite"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"lite-server"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"build-css"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node-sass ./src/scss/style.scss ./app/styles/style.css --output-style compressed"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"watch-css"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nodemon -e scss -x \"npm run build-css\""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"concurrently \"npm run lite\" \"npm run webpack\" \"npm run watch-css\""&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"keywords"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"shigeki.takeguchi"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"license"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"MIT"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;中身はこんな感じ。&lt;/p&gt;

&lt;h3&gt;パッケージの説明&lt;/h3&gt;

&lt;p&gt;落としてきたpackage.jsonからインストールすればいいんですがそれぞれのパッケージの説明を。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save three
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://github.com/mrdoob/three.js"&gt;https://github.com/mrdoob/three.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;言わずもがななthree.js。requireしたいのでnpmしましょう。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev concurrently
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://github.com/kimmobrunfeldt/concurrently"&gt;https://github.com/kimmobrunfeldt/concurrently&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;concurrentlyは複数のコマンド実行できるようにするため。具体的に何をしているかは後ほど説明。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev lite-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://github.com/johnpapa/lite-server"&gt;https://github.com/johnpapa/lite-server&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;webpackにもwebpack dev serverというのがあるみたいだけどlite-serverのがシンプルで良さそうなので使ってみた。&lt;br&gt;
ただし設定ファイルは必要でした。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev node-sass
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://github.com/sass/node-sass"&gt;https://github.com/sass/node-sass&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;node-sassでSassのコンパイル。全体的にNode.jsなのでSassのコンパイルだけRubyでなくてもいいだろうということで導入。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev nodemon
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://github.com/remy/nodemon"&gt;https://github.com/remy/nodemon&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;scssを監視してコマンドを実行する。具体的に何をしているかは後ほど説明。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev webpack
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://github.com/webpack/webpack"&gt;https://github.com/webpack/webpack&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;webpack。もうすでに何をするツールなのか説明しがたいくらい機能がある。&lt;br&gt;
静的なファイル（JavaScript系、CSS系、画像ファイル）の依存関係を解決するためのビルドツールってことなんだけど、ここでははJavaScriptだけを扱うようにしている。&lt;/p&gt;

&lt;h2&gt;package.jsonの中のscriptsで何をしているか&lt;/h2&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="s2"&gt;"scripts"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"webpack"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"webpack -w"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"lite"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"lite-server"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"build-css"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node-sass ./src/scss/app.scss ./app/styles/app.css --output-style compressed"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"watch-css"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nodemon -e scss -x \"npm run build-css\""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"concurrently \"npm run lite\" \"npm run webpack\" \"npm run watch-css\""&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このコマンドでlite-serverを立ち上げwebpackでwatchを行いcssの変更を監視するようにしている。  &lt;/p&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="s2"&gt;"start"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"concurrently \"npm run lite\" \"npm run webpack\" \"npm run watch-css\""&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;scriptsの中にあるstartがこれにあたる。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run lite
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run webpack
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run watch-css
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これらのコマンドはそれぞれ独立したコマンドですが、最初にちょっと触れたがconcurrentlyにダブルクオーテーションでくくってスペースで区切って引数で渡せば並行して実行することになる。便利。&lt;/p&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="s2"&gt;"webpack"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"webpack -w"&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これはwebpackのwatch（監視）を走らせている。こちらも後ほど触れるがwebpack.config.jsonで記述されたことをもとに監視している。&lt;/p&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="s2"&gt;"lite"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"lite-server"&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;lite-serverを立ち上げている。bs-config.jsonに設定ないようを記述している（こちらも後ほど触れる）。&lt;/p&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="s2"&gt;"build-css"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node-sass ./src/scss/app.scss ./app/styles/app.css --output-style compressed"&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sass（Scss）をnode-sassを使ってコンパイルしている。  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;./src/scss/app.scssはコンパイルする前のファイル。css（個人的にはScss記法だけど）の記述はこれにする。&lt;/li&gt;
&lt;li&gt;./app/styles/app.cssはコンパイル後のファイル。&lt;/li&gt;
&lt;li&gt;&amp;ndash;output-style compressedはコンパイル後のファイルを圧縮する設定。他にはnested、expanded（これが一般的に人が書くのに近いスタイル）、compactが使える。これはガイドラインや好みで。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="http://sass-lang.com/documentation/file.SASS_REFERENCE.html#output_style"&gt;Sass Documentation(output_style)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="s2"&gt;"watch-css"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nodemon -e scss -x \"npm run build-css\""&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nodemonを使ってscssファイルを監視し、変更があれば「npm run build-css」を走らせるという設定。&lt;br&gt;
「-e scss」ってのがscssを監視するというオプション。-xは「npm run build-css」を実行するためのオプションになる。&lt;/p&gt;

&lt;h2&gt;webpack.config.json&lt;/h2&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"webpack"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'./src/scripts/app.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;__dirname&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'/app/js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'bundle.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;publicPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'/app/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;optimize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;UglifyJsPlugin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;webpackの設定はいたってシンプル。entryにもとファイル（複数ある場合は配列で持たせる）。outputに出力される設定を記述。今回はbundle.jsっていう一般的によく使われているらしい名称のまま。&lt;br&gt;
素のままのファイルだともうファイルがでかくてあれなんでUglifyJsPluginで圧縮・最適化。&lt;/p&gt;

&lt;h2&gt;bs-config.json&lt;/h2&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"injectChanges"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"true"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"files"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"./app/**/*.{html,htm,css,js}"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"watchOptions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;"ignored"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node_modules"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"server"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;"baseDir"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./app"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;lite-serverの設定はドキュメントルートをappの直下にしたかったのと監視対象のファイル（html、css、js）が変更されたらリロードしてinjectChangesというBrowsersyncを動すため。&lt;/p&gt;

&lt;h2&gt;three.jsを使っての記述&lt;/h2&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'three'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;material&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mesh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

      &lt;span class="nx"&gt;scene&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Scene&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

      &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PerspectiveCamera&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

      &lt;span class="nx"&gt;geometry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;BoxGeometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;material&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MeshBasicMaterial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xff0000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;wireframe&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="nx"&gt;mesh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;material&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;mesh&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="nx"&gt;renderer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WebGLRenderer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;domElement&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

      &lt;span class="nx"&gt;requestAnimationFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="nx"&gt;mesh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rotation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mf"&gt;0.01&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;mesh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rotation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mf"&gt;0.02&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

      &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://github.com/mrdoob/three.js"&gt;https://github.com/mrdoob/three.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;このページのサンプルを記述するとしたらこんな感じになる。&lt;br&gt;
即時関数でくくるのは好みの問題。なくてももちろん動きます。&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'three'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こうやってrequireすることの他はとくに設定は不要。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;まだwebpackをはじめて数日とかという状態なので間違えや指摘をいただけると助かります。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>npmとwebpackで作るいい感じのフロントエンド開発環境（React.js使わない）2016年5月の場合。</title>
    <link rel="alternate" href="https://shigekitakeguchi.com/2016/05/26/1.html"/>
    <id>https://shigekitakeguchi.com/2016/05/26/1.html</id>
    <published>2016-05-26T00:00:00Z</published>
    <updated>2016-05-27T23:11:43+09:00</updated>
    <author>
      <name>shigeki.takeguchi</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a data-flickr-embed="true"  href="https://www.flickr.com/photos/shigeki_takeguchi/26674282264/in/dateposted-public/" title="npm_webpack_sass"&gt;&lt;img src="https://c1.staticflickr.com/8/7138/26674282264_c63915c662_z.jpg" width="640" height="480" alt="npm_webpack_sass" class="image-border"&gt;&lt;/a&gt;&lt;script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://liginc.co.jp/web/js/other-js/143500"&gt;エンジニアがいい感じにフロントエンド開発を爆速化できる環境構築の手順&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LIGさんの記事。個人的にはこれよりもシンプルなものが欲しくてあれこれ試しました。
GulpもBowerも使いません。あとユニットテストもするほどの規模ではないプロジェクトを想定。　　&lt;/p&gt;

&lt;p&gt;webpackはJavaScriptのrequireを使いたくて利用。&lt;br&gt;
SassのコンパイルやらCSSをrequireするのやらはどうも違和感がぬぐえなくてnpm使ってます。&lt;br&gt;
しかしフロントエンドの開発環境も変遷が激しくちょっと大きめのプロジェクトに没頭などしようものなら浦島太郎ですってことになるのでちょいちょいのアップデートが重要だなと。&lt;/p&gt;

&lt;h2&gt;必要なものあるかどうか確認&lt;/h2&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;まずはお決まりのNode.js入ってるか確認。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;npm（Node.jsのパッケージマネージャー）も入ってるか確認。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;webpack -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;webpackも入っているか確認。&lt;br&gt;
もし入ってなかったら&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install -g webpack
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;-gオプションはGlobalオプションのこと。&lt;/p&gt;

&lt;h2&gt;ファイル・フォルダ構成&lt;/h2&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/shigekitakeguchi/npm-webpack-sass.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://github.com/shigekitakeguchi/npm-webpack-sass"&gt;https://github.com/shigekitakeguchi/npm-webpack-sass&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHubから落として使ってください。&lt;br&gt;
カスタマイズなりなんなりして。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd npm-webpack-sass
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;落としたフォルダ内に移動する。その前に&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;├── README.md
├── app
│   ├── scripts
│   └── styles
├── bs-config.json
├── package.json
├── src
│   ├── scripts
│   │   └── app.js
│   └── scss
│       └── app.scss
└── webpack.config.js
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ファイル・フォルダ構成はこんな感じ。README.mdは不要。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで必要なパッケージがインストールされるはず。  &lt;/p&gt;

&lt;h2&gt;package.json&lt;/h2&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"npm-webpack-sass"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"index.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"concurrently"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.1.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"lite-server"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.2.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"node-sass"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^3.7.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"nodemon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.9.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"webpack"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.13.0"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"webpack"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"webpack -w"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"lite"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"lite-server"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"build-css"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node-sass ./src/scss/app.scss ./app/styles/app.css --output-style compressed"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"watch-css"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nodemon -e scss -x \"npm run build-css\""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"concurrently \"npm run lite\" \"npm run webpack\" \"npm run watch-css\""&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"keywords"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"shigeki.takeguchi"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"license"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"MIT"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;中身はこんな感じ。&lt;/p&gt;

&lt;h3&gt;パッケージの説明&lt;/h3&gt;

&lt;p&gt;落としてきたpackage.jsonからインストールすればいいんですがそれぞれのパッケージの説明を。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev concurrently
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://github.com/kimmobrunfeldt/concurrently"&gt;https://github.com/kimmobrunfeldt/concurrently&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;concurrentlyは複数のコマンド実行できるようにするため。具体的に何をしているかは後ほど説明。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev lite-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://github.com/johnpapa/lite-server"&gt;https://github.com/johnpapa/lite-server&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;webpackにもwebpack dev serverというのがあるみたいだけどlite-serverのがシンプルで良さそうなので使ってみた。&lt;br&gt;
ただし設定ファイルは必要でした。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev node-sass
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://github.com/sass/node-sass"&gt;https://github.com/sass/node-sass&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;node-sassでSassのコンパイル。全体的にNode.jsなのでSassのコンパイルだけRubyでなくてもいいだろうということで導入。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev nodemon
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://github.com/remy/nodemon"&gt;https://github.com/remy/nodemon&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;scssを監視してコマンドを実行する。具体的に何をしているかは後ほど説明。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev webpack
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://github.com/webpack/webpack"&gt;https://github.com/webpack/webpack&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;webpack。もうすでに何をするツールなのか説明しがたいくらい機能がある。&lt;br&gt;
静的なファイル（JavaScript系、CSS系、画像ファイル）の依存関係を解決するためのビルドツールってことなんだけど、ここでははJavaScriptだけを扱うようにしている。&lt;/p&gt;

&lt;h2&gt;package.jsonの中のscriptsで何をしているか&lt;/h2&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="s2"&gt;"scripts"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"webpack"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"webpack -w"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"lite"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"lite-server"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"build-css"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node-sass ./src/scss/app.scss ./app/styles/app.css --output-style compressed"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"watch-css"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nodemon -e scss -x \"npm run build-css\""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"concurrently \"npm run lite\" \"npm run webpack\" \"npm run watch-css\""&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このコマンドでlite-serverを立ち上げwebpackでwatchを行いcssの変更を監視するようにしている。  &lt;/p&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="s2"&gt;"start"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"concurrently \"npm run lite\" \"npm run webpack\" \"npm run watch-css\""&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;scriptsの中にあるstartがこれにあたる。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run lite
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run webpack
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run watch-css
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これらのコマンドはそれぞれ独立したコマンドですが、最初にちょっと触れたがconcurrentlyにダブルクオーテーションでくくってスペースで区切って引数で渡せば並行して実行することになる。便利。&lt;/p&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="s2"&gt;"webpack"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"webpack -w"&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これはwebpackのwatch（監視）を走らせている。こちらも後ほど触れるがwebpack.config.jsonで記述されたことをもとに監視している。&lt;/p&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="s2"&gt;"lite"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"lite-server"&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;lite-serverを立ち上げている。bs-config.jsonに設定ないようを記述している（こちらも後ほど触れる）。&lt;/p&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="s2"&gt;"build-css"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node-sass ./src/scss/app.scss ./app/styles/app.css --output-style compressed"&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sass（Scss）をnode-sassを使ってコンパイルしている。  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;./src/scss/app.scssはコンパイルする前のファイル。css（個人的にはScss記法だけど）の記述はこれにする。&lt;/li&gt;
&lt;li&gt;./app/styles/app.cssはコンパイル後のファイル。&lt;/li&gt;
&lt;li&gt;&amp;ndash;output-style compressedはコンパイル後のファイルを圧縮する設定。他にはnested、expanded（これが一般的に人が書くのに近いスタイル）、compactが使える。これはガイドラインや好みで。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="http://sass-lang.com/documentation/file.SASS_REFERENCE.html#output_style"&gt;Sass Documentation(output_style)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="s2"&gt;"watch-css"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nodemon -e scss -x \"npm run build-css\""&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nodemonを使ってscssファイルを監視し、変更があれば「npm run build-css」を走らせるという設定。&lt;br&gt;
「-e scss」ってのがscssを監視するというオプション。-xは「npm run build-css」を実行するためのオプションになる。&lt;/p&gt;

&lt;h2&gt;webpack.config.json&lt;/h2&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"webpack"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'./src/scripts/app.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;__dirname&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'/app/js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'bundle.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;publicPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'/app/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;optimize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;UglifyJsPlugin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;webpackの設定はいたってシンプル。entryにもとファイル（複数ある場合は配列で持たせる）。outputに出力される設定を記述。今回はbundle.jsっていう一般的によく使われているらしい名称のまま。&lt;br&gt;
素のままのファイルだともうファイルがでかくてあれなんでUglifyJsPluginで圧縮・最適化。&lt;/p&gt;

&lt;h2&gt;bs-config.json&lt;/h2&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"injectChanges"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"true"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"files"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"./app/**/*.{html,htm,css,js}"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"watchOptions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;"ignored"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node_modules"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"server"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;"baseDir"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./app"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;lite-serverの設定はドキュメントルートをappの直下にしたかったのと監視対象のファイル（html、css、js）が変更されたらリロードしてinjectChangesというBrowsersyncを動すため。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;個人的にはThree.jsやp5.jsを気軽に試したいときの環境をさくっと用意したかったために用意した感じになる。&lt;br&gt;
あとReact.jsを使うためにそもそもwebpackをはじめたのでReact.js版も公開します。&lt;br&gt;
まだwebpackをはじめて数日とかという状態なので間違えや指摘をいただけると助かります。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>食べて応援する渋谷にある熊本のお店</title>
    <link rel="alternate" href="https://shigekitakeguchi.com/2016/04/28/1.html"/>
    <id>https://shigekitakeguchi.com/2016/04/28/1.html</id>
    <published>2016-04-28T00:00:00Z</published>
    <updated>2016-04-28T23:54:10+09:00</updated>
    <author>
      <name>shigeki.takeguchi</name>
    </author>
    <content type="html">&lt;p&gt;いつもは社内で販売している弁当を買って食べているが渋谷の道玄坂に用事があったのでランチをしようと検索。  &lt;/p&gt;

&lt;div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://tabelog.com/tokyo/A1303/A130301/13136477/" target="_blank"&gt;熊本居酒屋 新市街&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;script src="http://tabelog.com/badge/google_badge?escape=false&amp;rcd=13136477" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p style="color:#444444; font-size:12px;"&gt;
&lt;strong&gt;関連ランキング：&lt;/strong&gt;&lt;a href="http://tabelog.com/rstLst/izakaya/"&gt;居酒屋&lt;/a&gt; | &lt;a href="http://tabelog.com/tokyo/A1303/A130301/R5207/rstLst/"&gt;神泉駅&lt;/a&gt;、&lt;a href="http://tabelog.com/tokyo/A1303/A130301/R4698/rstLst/"&gt;渋谷駅&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;ちょうど前の日にfacebookで「熊本産のものを食べて応援しよう」ってのを見たというのもあって熊本、渋谷、ランチで調べた。&lt;br&gt;
ちょうど２軒良さそうなお店があり、そのうちの１軒「熊本居酒屋 新市街」に行きました。&lt;br&gt;
お昼時ということもあったけどちらほら空きの席もあってすぐに座れました。  &lt;/p&gt;

&lt;p&gt;ランチはほぼ1,000円弱で天草梅肉ポークのとんかつ、生姜焼きや阿蘇の赤牛のカレーと熊本ラーメン、からあげ定食などがあります。
注文したのはメンチとからあげ、赤牛コロッケがのったフライ定食。美味しかったです。&lt;/p&gt;

&lt;hr&gt;

&lt;div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://tabelog.com/tokyo/A1303/A130301/13116295/" target="_blank"&gt;熊本バル　うせがたん&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;script src="http://tabelog.com/badge/google_badge?escape=false&amp;rcd=13116295" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p style="color:#444444; font-size:12px;"&gt;
&lt;strong&gt;関連ランキング：&lt;/strong&gt;&lt;a href="http://tabelog.com/rstLst/RC999909/"&gt;馬肉料理&lt;/a&gt; | &lt;a href="http://tabelog.com/tokyo/A1303/A130301/R5207/rstLst/"&gt;神泉駅&lt;/a&gt;、&lt;a href="http://tabelog.com/tokyo/A1303/A130301/R4698/rstLst/"&gt;渋谷駅&lt;/a&gt;、&lt;a href="http://tabelog.com/tokyo/A1318/A131801/R4118/rstLst/"&gt;駒場東大前駅&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;もう１軒は渋谷というよりも神泉ですね。ちょっと遠いけど機会を作って行ってみようと思います。&lt;br&gt;
ほんとうは熊本といえば、馬肉。馬刺しではなく馬肉のステーキが食べたかった。&lt;br&gt;
東京で美味しい熊本産の馬肉ステーキのお店、探してます。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Kindle本の紹介：ぼくらの仮説が世界をつくる</title>
    <link rel="alternate" href="https://shigekitakeguchi.com/2016/04/27/1.html"/>
    <id>https://shigekitakeguchi.com/2016/04/27/1.html</id>
    <published>2016-04-27T00:00:00Z</published>
    <updated>2016-04-28T00:53:56+09:00</updated>
    <author>
      <name>shigeki.takeguchi</name>
    </author>
    <content type="html">&lt;p&gt;「宇宙兄弟」も「ドラゴン桜」もどんな話かは知っているがマンガもそれを原作とした実写化も観たことないな。&lt;br&gt;
ドラゴン桜のドラマは子どもたちが熱心に観ていたのをうっすら記憶しているぐらい。&lt;/p&gt;

&lt;div class="amazon-wrapper"&gt;
&lt;p class="amazon-image"&gt;
&lt;a  href="http://www.amazon.co.jp/gp/product/B0191AIN6W/ref=as_li_ss_il?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B0191AIN6W&amp;linkCode=as2&amp;tag=uuuu-22"&gt;&lt;img border="0" src="http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B0191AIN6W&amp;Format=_SL250_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=uuuu-22" &gt;&lt;/a&gt;&lt;img src="http://ir-jp.amazon-adsystem.com/e/ir?t=uuuu-22&amp;l=as2&amp;o=9&amp;a=B0191AIN6W" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /&gt;
&lt;/p&gt;

&lt;p class="amazon-text"&gt;
&lt;a  href="http://www.amazon.co.jp/gp/product/B0191AIN6W/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B0191AIN6W&amp;linkCode=as2&amp;tag=uuuu-22"&gt;ぼくらの仮説が世界をつくる&lt;/a&gt;&lt;img src="http://ir-jp.amazon-adsystem.com/e/ir?t=uuuu-22&amp;l=as2&amp;o=9&amp;a=B0191AIN6W" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;仮設をまずたてて（その仮説たてることがまぁ普通は難しい気もする）それを実践していく。&lt;br&gt;
それ自体はありふれたメソッドのような気もするけどその仮説の独自性と大胆さで他を抜きん出るマンガを世に送り出せているんだろうな。&lt;br&gt;
とはいえ、それまでのマンガのあり方を変えてやろうといった作品ではないけどクオリティの高いマンガを出し、ちゃんと読みたい人へ届ける。&lt;br&gt;
案外と難しいことをちゃんと狙ってやれる人なんだな。すげー。&lt;br&gt;
そして何よりこの本も最後まで楽しく読めました。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Kindle本の紹介：HARD THINGS　答えがない難問と困難にきみはどう立ち向かうか</title>
    <link rel="alternate" href="https://shigekitakeguchi.com/2016/04/25/1.html"/>
    <id>https://shigekitakeguchi.com/2016/04/25/1.html</id>
    <published>2016-04-25T00:00:00Z</published>
    <updated>2016-04-27T00:53:17+09:00</updated>
    <author>
      <name>shigeki.takeguchi</name>
    </author>
    <content type="html">&lt;p&gt;経営とは経営者とは何をするのか、そしてホロウィッツの自伝的な著書。&lt;/p&gt;

&lt;div class="amazon-wrapper"&gt;
&lt;p class="amazon-image"&gt;
&lt;a  href="http://www.amazon.co.jp/gp/product/B00W535LOU/ref=as_li_ss_il?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00W535LOU&amp;linkCode=as2&amp;tag=uuuu-22"&gt;&lt;img border="0" src="http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B00W535LOU&amp;Format=_SL250_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=uuuu-22" &gt;&lt;/a&gt;&lt;img src="http://ir-jp.amazon-adsystem.com/e/ir?t=uuuu-22&amp;l=as2&amp;o=9&amp;a=B00W535LOU" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /&gt;
&lt;/p&gt;

&lt;p class="amazon-text"&gt;
&lt;a  href="http://www.amazon.co.jp/gp/product/B00W535LOU/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00W535LOU&amp;linkCode=as2&amp;tag=uuuu-22"&gt;HARD THINGS　答えがない難問と困難にきみはどう立ち向かうか&lt;/a&gt;&lt;img src="http://ir-jp.amazon-adsystem.com/e/ir?t=uuuu-22&amp;l=as2&amp;o=9&amp;a=B00W535LOU" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;目立つということでいうとマーク・アンドリーセンに注目がいく。学生にしてMosaicというウェブブラウザを開発、&lt;br&gt;
ネットスケープの共同創業者ということもあり、発言が先見性が高くカリスマ性がある。&lt;br&gt;
けどベン・ホロウィッツもアンドリーセン・ホロウィッツというすでに伝説になるようなベンチャーキャピタルの共同創業者であり、&lt;br&gt;
今まで知らなかったけどクラウドストレージ系の起業家なんですね。&lt;br&gt;
経営をしているわけではないが組織を作り、運営する。そういう仕事をしている人なら何らかのヒントが散りばめられていると思う。&lt;br&gt;
IT系に限らないのかもしれないが経営者やマネージメントをする人は「決断する」というのが大事な仕事であり、それは論理的に導かれるばかりではない。&lt;br&gt;
根拠も判断材料も何もない場合でも決断する必要があるなら決断しないといけない職能なんだということがよくわかる。&lt;br&gt;
でもよく考えるとどんな仕事でも決断する必要はあるし、仕事とはあまり関係ないことでも日常的に決断の連続だとも言える。&lt;br&gt;
ただその決断に影響されるのが自分だけか、家族もなのか、
仕事で関わる人たちなのかによって影響範囲の大きさが変わるだけだとも言える。&lt;br&gt;
もちろんその影響範囲によってプレッシャーも違うし後々への影響も違うだろう。&lt;br&gt;
そういえば、スティーブ・ジョブズにしろ、マーク・ザッカーバーグにしろ同じような服装をするのは１日の決断できる量は限られていて、&lt;br&gt;
それを今日着る服に費やすのはできれば避けたいということかららしい。  &lt;/p&gt;

&lt;p&gt;この本は自分で何かを決断する、もしくはしようとするすべての人のための本だと思う。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Jetstarで東京と神戸を往復した。</title>
    <link rel="alternate" href="https://shigekitakeguchi.com/2016/04/18/1.html"/>
    <id>https://shigekitakeguchi.com/2016/04/18/1.html</id>
    <published>2016-04-18T00:00:00Z</published>
    <updated>2016-04-25T00:49:57+09:00</updated>
    <author>
      <name>shigeki.takeguchi</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a data-flickr-embed="true"  href="https://www.flickr.com/photos/shigeki_takeguchi/24178068794/in/dateposted-public/" title="Untitled"&gt;&lt;img src="https://farm2.staticflickr.com/1558/24178068794_47612f6e42_z.jpg" width="640" height="480" alt="Untitled"&gt;&lt;/a&gt;&lt;script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;今年の２月になるけどJetstarを利用して神戸へ帰郷した。&lt;br&gt;
まずは利用し慣れているということもあって人形町、箱崎の東京シティエアターミナルから成田へリムジンバスに乗った。&lt;br&gt;
これは片道2,800円もする！うっかりしてた。&lt;br&gt;
いろいろ調べると銀座や東京駅から1,000円くらいで行けるバスがけっこうある。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.keiseibus.co.jp/kousoku/nrt16.html"&gt;京成高速バス 東京駅～成田空港900円（東京シャトル）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;このバスは予約だと片道900円、予約なしで行くと1,000円。&lt;/p&gt;

&lt;p&gt;&lt;a data-flickr-embed="true"  href="https://www.flickr.com/photos/shigeki_takeguchi/24798872642/in/dateposted-public/" title="Untitled"&gt;&lt;img src="https://farm2.staticflickr.com/1645/24798872642_3c9c7dab31_z.jpg" width="640" height="480" alt="Untitled"&gt;&lt;/a&gt;&lt;script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;そしてはじめての成田第3ターミナル。&lt;br&gt;
LCC専用というだけあってかなり削ぎ落とした感じで工場や倉庫のような機能的な雰囲気。&lt;br&gt;
空港の案内板などのサインはPARTYが作ったらしく簡潔でわかりやすくこちらも機能的。&lt;br&gt;
だいたい空港は歩くことが多いですが羽田のように動く歩道などもない。&lt;br&gt;
だからかなり歩く印象。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.muji.com/jp/narita-terminal3/"&gt;成田空港　ターミナル3 | 無印良品&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;平日なのでそこまで混まないかなと思ってたけど飛行機も満席らしくゲートラウンジも雑然と混み合っていた。&lt;br&gt;
値段が安いということもあって若い人やアジア人が多い。あとちょくちょく会社員が混じってる感じ。  &lt;/p&gt;

&lt;p&gt;今回、はじめて買ったJetstarの運賃は席予約料、支払手数料、旅客施設使用料などを含めて往復で12,020円でした。&lt;br&gt;
よくANAで大阪空港にまで乗っていたけどたしか12,000円くらいだったと思うので半額くらいで関西へ行ける。&lt;br&gt;
搭乗時間になって飛行機へ乗り込むとCAの方もいて、通路は少ないので雑然と乗り込んでいく。&lt;br&gt;
機内もそんなに安っぽくなくてシートも狭いと言われてますがまあ国内で利用するくらいなら問題ない。&lt;/p&gt;

&lt;p&gt;だいたい飛び立つと寝てしまうんだけど今回も富士山を見たら寝てしまった。
そして問題もなく関空へ着陸。問題はここから神戸までどうやったら安く行けるかです。&lt;br&gt;
リムジンバスに乗ると1,950円ですがもっと安く行く方法はないかと探してみましたがなかなかないですね。&lt;br&gt;
電車を乗り継いでいくと1,330円。しかしこれはつらい。&lt;br&gt;
高速艇もポートライナーとセットで1,850円。&lt;br&gt;
東京と大阪間が高速バスで3,000円とかがあるらしいのにもう少し安くならないかと思いました。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.kansai-airport.or.jp/otoku-access/"&gt;関西国際空港｜ご存じですか？安くて近い関西空港アクセス&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;日帰り往復のバスだとたしかに安いんですけどね。。。&lt;/p&gt;

&lt;p&gt;ということでいろいろ頑張って往復17,000円前後って感じですね。&lt;br&gt;
ANAで羽田空港から大阪空港へ行くことと比べるとバスの移動に時間がかかりますね。
半額で行けるって考えるとまぁいいですかね。新幹線で往復すると24,000円くらいしますからね。
時間的には新幹線のが楽なような気もしますが、次も使ってみようと思います。  &lt;/p&gt;
</content>
  </entry>
</feed>
